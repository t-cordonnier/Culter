<?xml version="1.0" encoding="UTF-8"?>
<!--
    Culter segmentation format, extended: 
-->
<seg-rules xmlns="http://culter.silvestris-lab.org/compatible">
    <rules-mapping cascade="true">
        <languagemap languagepattern="[dD][eE](\W.*)?" languagerulename="Deutsch"/>
        <languagemap languagepattern="[eE][nN](\W.*)?" languagerulename="English"/>
        <languagemap languagepattern="[fF][rR](\W.*)?" languagerulename="Français"/>
        <languagemap languagepattern="[jJ][aA](\W.*)?" languagerulename="Nihongo"/>
        <languagemap languagepattern=".*" languagerulename="Common"/>
    </rules-mapping>
	<!-- Rule templates: enable to repeat a standard schema -->
	<rule-templates>
		<rule-template name="abbreviations">
			<rule-template-param name="words" join="|" />
			<rewrite>
				<rule break="no">
					<beforebreak>\b(%{words})\.</beforebreak>   <!-- avoids repeating dot at the end -->
					<afterbreak>\s</afterbreak>
				</rule>
			</rewrite>
		</rule-template>
		<rule-template name="ordinal followers">
			<param-list name="words" join="|" />
			<rewrite>
				<rule break="no">
					<beforebreak>[0-9]\.</beforebreak>
					<afterbreak>\s(%{words})</afterbreak>
				</rule>
			</rewrite>
		</rule-template>		
	</rule-templates>
    <!-- Language rules -->
	<languagerules>
		<languagerule languagerulename="Common">
            <!-- say that we never cut inside parenthesis -->
            <protected-part begin="\(" end="\)" />  <!-- warning: use \ because these are regular expressions! -->
            <protected-part begin="\[" end="\]" recursive="yes" />  <!-- recursive : [...[...]...] will be considered entirely -->
            <protected-part begin="\{" end="\}" recursive="no" />  <!-- not recursive (default) : [...[...]...] will be considered until first ] -->
            <!-- usual rule -->
            <break-rule>
                <beforebreak>[\.\?\!]</beforebreak>
                <afterbreak keep="$1">\s(\p{Lu})</afterbreak>
            </break-rule>            
		</languagerule>
		<languagerule languagerulename="Français" join=" ">
            <!-- Apply a template: this will generate one single rule with all abbreviations -->
			<apply-rule-template name="abbreviations">
                <param name="words" mode="loop">
                    <item>Mr</item>
                    <item>Mmes?</item>
                    <item>Mlles?</item>
					<item>n°s</item>
                </param>
			</apply-rule-template>        
			<!-- Shows sample of what template makes possible to simplify : -->
			<rule break="no">
				<beforebreak>\betc\.</beforebreak>
				<afterbreak>\s</afterbreak>
			</rule>
			<!-- Equivalent in typed-rule is : 
				<typed-rule><param name="word">ODB</param></typed-rule>
			-->			
        </languagerule>
		<languagerule languagerulename="English" join=" ">
			<apply-rule-template name="abbreviations">
                <param name="words" mode="loop">
                    <item>Dr</item>
                    <item>Mr</item>
                    <item>Mrs</item>
                </param>
			</apply-rule-template>
        </languagerule>
		<languagerule languagerulename="Deutsch" join=" ">
			<apply-rule-template name="abbreviations">
                <param name="words" mode="loop">
                    <item>GMBH</item>
                    <item>HBF</item>
                </param>
			</apply-rule-template>
			<apply-rule-template name="ordinal followers">
                <param name="words" mode="loop">
                    <item>jahrhundert(s)?</item>
                    <item>tag(es|s|ung)?</item>
                </param>
			</apply-rule-template>
        </languagerule>
		<languagerule languagerulename="Nihongo" join="" />	<!-- do not insert spaces between strings -->
	</languagerules>
    
</seg-rules>

